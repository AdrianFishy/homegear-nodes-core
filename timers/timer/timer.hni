<script type="text/x-homegear">
{
    "name": "timer",
    "readableName": "Timer",
    "version": "0.0.1",
    "maxThreadCount": 1
}
</script>
<script type="text/x-red" data-template-name="timer">
    <div class="form-row">
        <label for="node-input-name"><i class="fa fa-tag"></i> <span data-i18n="common.label.name"></span></label>
        <input type="text" id="node-input-name" data-i18n="[placeholder]common.label.name"/>
    </div>
    <div class="form-row">
        <label style="width:16%" for="node-input-ontime"><i class="fa fa-clock-o"></i> <span data-i18n="timer.label.ontime"></span></label>
        <input type="text" id="node-input-ontime" style="width:26%"/>
        <input type="hidden" id="node-input-ontimetype"/>
        <label style="width:16%"  for="node-input-offtime"><i class="fa fa-clock-o"></i> <span data-i18n="timer.label.offtime"></span></label>
        <input type="text" id="node-input-offtime" style="width:26%"/>
        <input type="hidden" id="node-input-offtimetype"/>
    </div>
    <div class="form-row">
        <label style="width:16%" for="node-input-lat"><i class="fa fa-globe"></i> <span data-i18n="timer.label.latitude"></span></label>
        <input style="width:26%" type="text" id="node-input-lat" placeholder="54.32">

        <label style="width:16%" for="node-input-lon"><i class="fa fa-globe"></i> <span data-i18n="timer.label.longitude"></span></label>
        <input style="width:26%" type="text" id="node-input-lon" placeholder="10.13">
    </div>
</script>
<script type="text/javascript">
    RED.nodes.registerType('timer',{
        category: 'time',
        namespace: 'timers',
        color:"#FFCC66",
        defaults: {
            name: {value:""},
            ontime: {value:""},
            ontimetype: {value:"suntime", validate: RED.validators.typedInput("ontimetype")},
            offtime: {value:"1:15"},
            offtimetype: {value:"time", validate: RED.validators.typedInput("offtimetype")},
            lat: {value:"", required: true},
            lon: {value:"", required: true}
        },
        inputs:1,
        inputInfo: [
            {
                label: "EN",
                types: ["boolean"]
            }
        ],
        outputs:1,
        icon: "serial.png",
        label: function() {
            if(this.name) return this.name;
            return "timer";
        },
        oneditprepare: function() {
            if (($("#node-input-lat").val() === "") && ($("#node-input-lon").val() === "")) {
                if ("geolocation" in navigator) {
                    navigator.geolocation.getCurrentPosition(function(position) {
                        $("#node-input-lat").val(Number(position.coords.latitude.toFixed(5)));
                        $("#node-input-lon").val(Number(position.coords.longitude.toFixed(5)));
                    });
                }
            }

            $("#node-input-ontime").typedInput({
                default: 'suntime',
                typeField: $("#node-input-ontimetype"),
                types:['suntime','time']
            });

            $("#node-input-ontime").typedInput('type',this.payloadType);

            $("#node-input-offtime").typedInput({
                default: 'time',
                typeField: $("#node-input-offtimetype"),
                types:['suntime','time']
            });

            $("#node-input-offtime").typedInput('type',this.payloadType);
        }
    });
</script>
