<script type="text/x-homegear">
{
    "name": "timer",
    "readableName": "Timer",
    "version": "0.0.1",
    "maxThreadCount": 1
}
</script>
<script type="text/x-red" data-template-name="timer">
    <div class="form-row">
        <label for="node-input-name"><i class="fa fa-tag"></i> <span data-i18n="common.label.name"></span></label>
        <input type="text" id="node-input-name" data-i18n="[placeholder]common.label.name"/>
    </div>
    <div class="form-row">
        <label for="node-input-ontime"><i class="fa fa-envelope"></i> <span data-i18n="common.label.ontime"></span></label>
        <input type="text" id="node-input-ontime" style="width:70%"/>
        <input type="hidden" id="node-input-ontimetype"/>
    </div>
    <div class="form-row">
        <label for="node-input-offtime"><i class="fa fa-envelope"></i> <span data-i18n="common.label.offtime"></span></label>
        <input type="text" id="node-input-offtime" style="width:70%"/>
        <input type="hidden" id="node-input-offtimetype"/>
    </div>
</script>
<script type="text/javascript">
    RED.nodes.registerType('timer',{
        category: 'time',
        namespace: 'timers',
        color:"#a6bbcf",
        defaults: {
            name: {value:""},
            ontime: {value:""},
            ontimetype: {value:"suntime", validate: RED.validators.typedInput("ontimetype")},
            offtime: {value:""},
            offtimetype: {value:"time", validate: RED.validators.typedInput("offtimetype")}
        },
        inputs:1,
        inputInfo: [
            {
                label: "EN",
                types: ["boolean"]
            }
        ],
        outputs:2,
        outputInfo: [
            {
		label: "t",
                types: ["integer"]
            },
            {
		label: "f",
                types: ["boolean"]
            }
        ],
        icon: "serial.png",
        label: function() {
            if(this.name) return this.name;
            return "timer";
        },
        oneditprepare: function() {
            $("#node-input-ontime").typedInput({
                default: 'suntime',
                typeField: $("#node-input-ontimetype"),
                types:['suntime','time']
            });

            $("#node-input-ontime").typedInput('type',this.payloadType);
            $("#node-input-ontimetype").on('change', function() { alert('Moin'); });

            $("#node-input-offtime").typedInput({
                default: 'time',
                typeField: $("#node-input-offtimetype"),
                types:['suntime','time']
            });

            $("#node-input-offtime").typedInput('type',this.payloadType);
        }
    });
</script>
